---
- hosts: platform
  remote_user: root

  vars:
    user: ogptoolbox

  vars_prompt:
    - name: "githubuser"
      prompt: "Enter your framagit username"
      private: no
    - name: "githubpassword"
      prompt: "Enter your framagit password"
      private: yes
    - name: "sendgriduser"
      prompt: "Enter your sendgrid username"
      private: no
    - name: "sendgridpass"
      prompt: "Enter your sendgrid password"
      private: yes
    - name: "mongosu"
      prompt: "Set your mongodb superAdmin username"
      private: no
    - name: "mongosupass"
      prompt: "Set your mongodb superAdmin password"
      private: yes
    - name: "mongogppass"
      prompt: "Set your mongodb ogptoolbox's password"
      private: yes
    - name: "domainname"
      prompt: "Prompt your server domain name for ssl certificate request"
      private: no
    - name: "adminemail"
      prompt: "Set your contact email for certificate and monitoring alert"
      private: no
    - name: "monitpass"
      prompt: "Set your monitoring acess password, your username is your email"
      private: yes

  tasks:
  - name: Create {{ user }} users in instance
    user: name={{ user }} shell=/bin/bash createhome=yes comment='create with ansible'

  - name: Add {{ user }} to sudoers
    template: src=templates/sudoers-user.j2 dest=/etc/sudoers validate='visudo -cf %s'

  - name: Add master's public key to {{ user }} in instance
    authorized_key: user={{ user }} key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

  - name: Add repo in apt sources
    template: src=templates/sources_list.j2 dest=/etc/apt/sources.list

  - name: Add apt key for mongodb repo
    command: apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927

  - name: Update apt cache
    apt: update_cache=yes

  - name: Install required packages
    apt: name={{ item }} state=present
    with_items:
        - git
        - curl
        - mongodb-org
        - nginx
        - python-pip
        - fail2ban
        - monit

  - name: Install certbot
    apt: name=certbot state=present default_release=jessie-backports

  - name: Install NodeJS and NPM
    script: file/install_npm.sh

  - name: Install pymongo module
    pip: name=pymongo

  - name: Start mongod service
    service: name=mongod state=started enabled=true

  - name: Configure mongodb DB superuser
    mongodb_user: database=admin name={{ mongosu }} password={{ mongosupass }} state=present roles='root'

  - name: Restart mongod service
    service: name=mongod state=restarted

  - name: Configure mongodb DB ogptoolbox user
    mongodb_user: login_user={{ mongosu }} login_password={{ mongosupass }} database=db_deploy name=ogptoolbox password={{ mongogppass }} state=present roles='readWrite'

  - name: Clone ogptoolbox-platform from repository
    git: accept_hostkey=yes repo=https://{{ githubuser }}:{{ githubpassword }}@framagit.org/etalab/ogptoolbox-platform.git dest=/home/ogptoolbox/ogptoolbox-platform force=yes

  - name: Configure ogptoolbox-platform to connecting with mongodb
    template: src=templates/db_connect.j2 dest=/home/ogptoolbox/ogptoolbox-platform/mongo/db_connect.js

  - name: Correct connection to mongodb
    command: sed -i 's/mypass/{{ mongogppass }}/' /home/ogptoolbox/ogptoolbox-platform/mongo/db_connect.js

  - name: Stop nginx service
    service: name=nginx state=stopped

  - name: Get ssl certificate
    command: letsencrypt certonly --standalone --domain {{ domainname }} --email {{ adminemail }} --agree-tos -n

  - name: Get ssl certificate for monitoring server
    command: letsencrypt certonly --standalone --domain monitoring.{{ domainname }} --email {{ adminemail }} --agree-tos -n

  - name: Configure nginx SSL front side
    template: src=templates/nginx-front-ssl_platform.conf dest=/etc/nginx/sites-available/default

  - name: Configure nginx SSL front side
    template: src=templates/nginx-front-ssl_monit.conf dest=/etc/nginx/sites-available/monitoring

  - name: enable monitoring nginx conf file
    command: ln -s /etc/nginx/sites-available/monitoring /etc/nginx/sites-enabled/monitoring

  - name: Set domain name in nginx conf file
    command: sed -i 's/$domain/{{ domainname }}/' /etc/nginx/sites-available/default

  - name: Set domain name in nginx monit conf file
    command: sed -i 's/$domain/{{ domainname }}/' /etc/nginx/sites-available/monitoring

  - name: Start nginx service
    service: name=nginx state=started enabled=true

  - name: Install pm2
    npm: name=pm2 global=yes

  - name: create .env file
    template: src=templates/env_file dest=/home/ogptoolbox/ogptoolbox-platform/.env

  - name: set sengrid user
    command: sed -i 's/user/{{ sendgriduser }}/' /home/ogptoolbox/ogptoolbox-platform/.env

  - name: set sendgrid pass
    command: sed -i 's/pass/{{ sendgridpass }}/' /home/ogptoolbox/ogptoolbox-platform/.env

  - name: Configure ecosystem
    template: src=templates/ecosystem.json dest=/home/ogptoolbox/ogptoolbox-platform/ecosystem.json

  - name: Change owner of ogptoolbox-platform
    file: path=/home/ogptoolbox/ogptoolbox-platform owner=ogptoolbox group=ogptoolbox mode=744 recurse=yes

  - name: update obsolete packages name in packages.json
    command: sed -i 's/ogp-consultation-verification/nodemailer/' /home/ogptoolbox/ogptoolbox-platform/package.json

  - name: update obsolete packages version in packages.json
    command: sed -i 's/^0.5.0/3.1.4/' /home/ogptoolbox/ogptoolbox-platform/package.json

  - name: Change owner of node modules
    file: path=/home/ogptoolbox/ogptoolbox-platform/node_modules owner=ogptoolbox group=ogptoolbox mode=755 recurse=yes state=directory

  - name: Install required node packages
    command: sudo -u ogptoolbox bash -lc "cd /home/ogptoolbox/ogptoolbox-platform && npm install"

  - name: install ogp-consultation-verification
    script: file/install-prob-package.sh

  - name: launch platform
    command: sudo -u ogptoolbox bash -lc "cd /home/ogptoolbox/ogptoolbox-platform && pm2 start ecosystem.json"

  - name: Stop monit service
    service: name=monit state=stopped   

  - name: copy default configuration of monitoring server
    command: cp /etc/monit/monitrc /etc/monit/monitrc.default

  - name: Set configuration for monitoring
    template: templates/monitconf /etc/monit/monitrc

  - name: Set hostname in monitoring conf
    script: file/hostname-monit.sh

  - name: Set monit pass in monitoring conf
    command: sed -i 's/pass/{{ monitpass }}/' /etc/monit/monitrc

  - name: set sengrid user for monit
    command: sed -i 's/sendgriduser/{{ sendgriduser }}/' /etc/monit/monitrc

  - name: set sendgrid pass for monit
    command: sed -i 's/sendgridpass/{{ sendgridpass }}/' /etc/monit/monitrc

  - name: set admin mail for monit
    command: sed -i 's/adminmail/{{ adminemail }}/' /etc/monit/monitrc

  - name: set domain mail for monit
    command: sed -i 's/domain/{{ domainname }}/' /etc/monit/monitrc

  - name: Retart monit service
    service: name=monit state=started enabled=true
